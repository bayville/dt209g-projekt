@use '../abstracts' as a;

// Generate grid-comluns
$cols: (
  grid-cols-1: repeat(1, minmax(0, 1fr)),
  grid-cols-2: repeat(2, minmax(0, 1fr)),
  grid-cols-2-70-30: 70% 30%,
  grid-cols-3: repeat(3, minmax(0, 1fr)),
  grid-cols-4: repeat(4, minmax(0, 1fr)),
  grid-cols-5: repeat(5, minmax(0, 1fr)),
  grid-cols-6: repeat(6, minmax(0, 1fr)),
  grid-cols-7: repeat(7, minmax(0, 1fr)),
  grid-cols-8: repeat(8, minmax(0, 1fr)),
  grid-cols-9: repeat(9, minmax(0, 1fr)),
  grid-cols-10: repeat(10, minmax(0, 1fr)),
  grid-cols-11: repeat(11, minmax(0, 1fr)),
  grid-cols-12: repeat(12, minmax(0, 1fr)),
  grid-cols-none: none  
);

@each $name, $value in $cols {
  .#{$name} {
    grid-template-columns: #{$value};
  }
}

// Generate columns for breakpoints
@each $breakpoint, $size in a.$breakpoints {
  @include a.breakpoint($breakpoint) {
    @each $name, $value in $cols {
      .bp-#{$breakpoint}\:#{$name} {
        grid-template-columns: #{$value};
      }
    }
  }
}


// Generate auto-rows classes
$auto-rows: (
  auto,
  min,
  max,
  fr
);

@each $value in $auto-rows {
  .grid-rows-#{$value} {
    grid-auto-rows: #{$value};
  }
}


$col-span: (
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12
);


@each $value in $col-span {
  .col-span-#{$value} {
    grid-column: span #{$value};
  }
}


// Generate column-spans for breakpoints
@each $breakpoint, $size in a.$breakpoints {
  @include a.breakpoint($breakpoint) {
    @each $value in $col-span {
      .bp-#{$breakpoint}\:col-span-#{$value} {
        grid-column: span #{$value};
      }
    }
  }
}

.col-span-full{
  grid-column: 1 / -1;
}

@each $value in $col-span {
  .row-span-#{$value} {
    grid-row: span #{$value};
  }
}


// Generate row-spans for breakpoints
@each $breakpoint, $size in a.$breakpoints {
  @include a.breakpoint($breakpoint) {
    @each $value in $col-span {
      .bp-#{$breakpoint}\:row-span-#{$value} {
        grid-row: span #{$value};
      }
    }
  }
}